{"version":3,"sources":["components/Cards/Cards.module.css","images/image.png","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","seperator","url","FetchData","country","a","changeableUrl","axios","get","console","log","FetchDailyData","modifiedData","slice","length","map","reportDate","total","date","FetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","then","response","FetchAPI","LineChart","undefined","labels","datasets","label","borderColor","fill","backgroundColor","BarChart","options","legend","display","title","text","CountryPicker","handleChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","default","onChange","e","target","i","key","App","state","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e87e3595.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","import React from 'react'\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core'\nimport styles from './Cards.module.css'\nimport CountUp from 'react-countup'\nimport cx from 'classnames'\n\nconst Cards = ({ data: {confirmed, deaths, recovered, lastUpdate} }) => {\n  if(!confirmed){\n    return 'Loading....'\n  }\n  return (\n    <div className = {styles.container}>\n\n      <Grid container spacing = {3} justify = 'center'>\n        <Grid item component = {Card} xs = {12} md={3} className = {cx(styles.card, styles.infected)}>\n          <CardContent>\n            <Typography color = 'textSecondary' gutterBottom> \n               Infected \n            </Typography>\n\n            <Typography variant = 'h5'>\n              <CountUp start = {0} end = {confirmed.value} duration = {2.75} separator = ',' ></CountUp>\n            </Typography>\n\n            <Typography color = 'textSecondary'> {new Date(lastUpdate).toDateString()} </Typography>\n\n            <Typography variant = 'body2'> \n               Number of active cases of Covid-19\n             </Typography>\n          </CardContent>\n        </Grid>\n\n       <Grid item component = {Card} xs = {12} md={3} className = {cx(styles.card, styles.recovered)}>\n          <CardContent>\n            <Typography color = 'textSecondary' gutterBottom> Recovered </Typography>\n            <Typography variant = 'h5'>  \n            <CountUp start = {0} end = {recovered.value} duration = {2.75} seperator = ',' ></CountUp>\n             </Typography>\n             <Typography color = 'textSecondary'> {new Date(lastUpdate).toDateString()} </Typography>\n            <Typography variant = 'body2'>Recovered cases of Covid-19</Typography>\n          </CardContent>\n        </Grid>\n        <Grid item component = {Card} xs = {12} md={3} className = {cx(styles.card, styles.deaths)}>\n          <CardContent>\n            <Typography color = 'textSecondary' gutterBottom> Deaths </Typography>\n            <Typography variant = 'h5'>\n            <CountUp start = {0} end = {deaths.value} duration = {2.75} seperator = ',' ></CountUp>\n            </Typography>\n            <Typography color = 'textSecondary'> {new Date(lastUpdate).toDateString()} </Typography>\n            <Typography variant = 'body2'> Death cases of Covid-19</Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n      \n    </div>\n  );\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const FetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(changeableUrl);\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    const modifiedData = data\n      .slice(data.length - 100)\n      .map(({ confirmed, deaths, reportDate }) => ({\n        confirmed: confirmed.total,\n        deaths: deaths.total,\n        date: reportDate,\n      }));\n    console.log({ modifiedData });\n    return modifiedData;\n  } catch {}\n};\n\nexport const FetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\nimport { FetchDailyData } from '../../api';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const FetchAPI = async () => {\n      FetchDailyData().then((response) => {\n        console.log({ response });\n      });\n      const response = await FetchDailyData();\n      console.log({ response });\n      setDailyData(await FetchDailyData());\n    };\n\n    FetchAPI();\n  }, []);\n\n  const LineChart =\n    dailyData !== undefined ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [\n            {\n              data: dailyData.map((data) => data.confirmed),\n              label: 'Confirmed',\n              borderColor: '#3333ff',\n              fill: true,\n            },\n            {\n              data: dailyData.map((data) => data.deaths),\n              label: 'Deaths',\n              borderColor: 'red',\n              backgroundColor: 'rgba(255,0,0,0.5)',\n              fill: true,\n            },\n          ],\n        }}\n      />\n    ) : null;\n\n  const BarChart = confirmed ? (\n    <Bar\n      data={{\n        labels: ['Infected', 'Recovered', 'Deaths'],\n        datasets: [\n          {\n            label: 'People',\n            backgroundColor: [\n              'rgba(0, 0, 255, 0.5)',\n              'rgba(0, 255, 0, 0.5)',\n              'rgba(255, 0, 0, 0.5)',\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? BarChart : LineChart}</div>\n  );\n};\n\nexport default Chart;\n","  import React, {useState,useEffect} from 'react'\n  import {NativeSelect, FormControl} from '@material-ui/core'\n  import {FetchCountries} from '../../api'\n  import styles from './CountryPicker.module.css'\n\n  const CountryPicker = ({handleChange}) => {\n\n    const[fetchedCountries, setFetchedCountries] = useState([])\n\n    useEffect(() => {\n      const FetchAPI = async () => {\n        setFetchedCountries(await FetchCountries())\n      }\n\n      FetchAPI()\n    }, [setFetchedCountries])\n\n    return ( \n      <FormControl className = {styles.formControl}>\n        <NativeSelect default = '' onChange = {(e) => handleChange(e.target.value)} >\n          <option value = ''>Global</option>\n          {fetchedCountries.map((country, i) => (\n            <option key = {i} value = {country}>{country}</option>\n          ))}\n        </NativeSelect>\n      </FormControl>\n    );\n  }\n  \n  export default CountryPicker","import React, { Component } from 'react';\nimport styles from './App.module.css';\nimport { Cards, Chart, CountryPicker } from './components/';\nimport { FetchData } from './api';\nimport CoronaImage from './images/image.png';\n\nclass App extends Component {\n  state = {\n    data: ' ',\n  };\n\n  async componentDidMount() {\n    const data = await FetchData();\n    // console.log(data);\n    this.setState({\n      data: data,\n    });\n  }\n\n  handleChange = async (country) => {\n    //fetch the data\n    const data = await FetchData(country);\n    this.setState({\n      data: data,\n      country: country,\n    });\n    //set the state\n    console.log(country);\n  };\n\n  render() {\n    const { data } = this.state;\n    return (\n      <div className={styles.container}>\n        <Cards data={data} />\n        <CountryPicker handleChange={this.handleChange} />\n        <Chart data={this.state.data} country={this.state.country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render( <App/>, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};"],"sourceRoot":""}