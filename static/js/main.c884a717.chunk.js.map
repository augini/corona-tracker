{"version":3,"sources":["components/Cards/Cards.module.css","images/image.png","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","seperator","url","FetchData","country","a","changeableUrl","axios","get","console","log","FetchDailyData","modifiedData","slice","length","map","dailyData","total","date","reportDate","FetchCountries","countries","name","Chart","useState","setDailyData","useEffect","FetchAPI","LineChart","labels","datasets","label","borderColor","fill","backgroundColor","BarChart","options","legend","display","title","text","CountryPicker","handleChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","default","onChange","e","target","i","key","App","state","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c884a717.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1nRFY\",\"card\":\"Cards_card__1yFQn\",\"infected\":\"Cards_infected__Z5RTx\",\"recovered\":\"Cards_recovered__32h6v\",\"deaths\":\"Cards_deaths__2OExJ\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","import React from 'react'\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core'\r\nimport styles from './Cards.module.css'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nconst Cards = ({ data: {confirmed, deaths, recovered, lastUpdate} }) => {\r\n  if(!confirmed){\r\n    return 'Loading....'\r\n  }\r\n  return (\r\n    <div className = {styles.container}>\r\n\r\n      <Grid container spacing = {3} justify = 'center'>\r\n        <Grid item component = {Card} xs = {12} md={3} className = {cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color = 'textSecondary' gutterBottom> \r\n               Infected \r\n            </Typography>\r\n\r\n            <Typography variant = 'h5'>\r\n              <CountUp start = {0} end = {confirmed.value} duration = {2.75} separator = ',' ></CountUp>\r\n            </Typography>\r\n\r\n            <Typography color = 'textSecondary'> {new Date(lastUpdate).toDateString()} </Typography>\r\n\r\n            <Typography variant = 'body2'> \r\n               Number of active cases of Covid-19\r\n             </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n       <Grid item component = {Card} xs = {12} md={3} className = {cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color = 'textSecondary' gutterBottom> Recovered </Typography>\r\n            <Typography variant = 'h5'>  \r\n            <CountUp start = {0} end = {recovered.value} duration = {2.75} seperator = ',' ></CountUp>\r\n             </Typography>\r\n             <Typography color = 'textSecondary'> {new Date(lastUpdate).toDateString()} </Typography>\r\n            <Typography variant = 'body2'>Recovered cases of Covid-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component = {Card} xs = {12} md={3} className = {cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color = 'textSecondary' gutterBottom> Deaths </Typography>\r\n            <Typography variant = 'h5'>\r\n            <CountUp start = {0} end = {deaths.value} duration = {2.75} seperator = ',' ></CountUp>\r\n            </Typography>\r\n            <Typography color = 'textSecondary'> {new Date(lastUpdate).toDateString()} </Typography>\r\n            <Typography variant = 'body2'> Death cases of Covid-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const FetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if(country){\r\n    changeableUrl = `${url}/countries/${country}`\r\n  }\r\n\r\n  try {\r\n    const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl)\r\n    return { confirmed, recovered, deaths, lastUpdate,}\r\n  }\r\n  catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const FetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`)\r\n\r\n    const modifiedData = data.slice(data.length-100).map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate }))\r\n\r\n    return modifiedData\r\n  }\r\n  catch {\r\n\r\n  }\r\n}\r\n\r\nexport const FetchCountries = async () => {\r\n  try {\r\n    const {data: {countries}} = await axios.get(`${url}/countries`)\r\n    return countries.map((country) => country.name)\r\n  }\r\n  catch(error) {\r\n    console.log(error);\r\n  }\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {Line, Bar} from 'react-chartjs-2'\r\nimport styles from './Chart.module.css'\r\nimport {FetchDailyData} from '../../api'\r\n\r\nconst Chart = ({ data: {confirmed, recovered, deaths}, country}) => {\r\n  const [dailyData, setDailyData] = useState([])\r\n\r\n  useEffect(() => {\r\n    const FetchAPI = async () => {\r\n      setDailyData(await FetchDailyData())\r\n    }\r\n\r\n    FetchAPI()\r\n  }, [])\r\n\r\n  const LineChart = (\r\n    dailyData[0] ?  (\r\n    <Line  \r\n    data = {{ \r\n      labels: dailyData.map(({ date }) => date) , \r\n      datasets: [ {\r\n        data: dailyData.map(( data ) => data.confirmed),\r\n        label: 'Confirmed',\r\n        borderColor: '#3333ff',\r\n        fill: true\r\n      }, {\r\n        data: dailyData.map(( data ) => data.deaths,),\r\n        label: 'Deaths',\r\n        borderColor: 'red',\r\n        backgroundColor: 'rgba(255,0,0,0.5)',\r\n        fill: true\r\n      }] \r\n      }}/> ) : null\r\n  )\r\n\r\n  const BarChart = (\r\n    confirmed ?        \r\n    ( \r\n      <Bar \r\n      data = {{\r\n        labels: ['Infected', 'Recovered', 'Deaths'],\r\n        datasets: [\r\n          {\r\n            label: 'People',\r\n            backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          }\r\n        ]\r\n      }}\r\n      options = {{\r\n        legend: {display: false},\r\n        title: {display: true, text: `Current state in ${country}`}\r\n      }} />\r\n    ) : null\r\n  )\r\n\r\n\r\n\r\n  return ( \r\n    <div className = {styles.container}>\r\n       {country? BarChart : LineChart}\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Chart;","  import React, {useState,useEffect} from 'react'\r\n  import {NativeSelect, FormControl} from '@material-ui/core'\r\n  import {FetchCountries} from '../../api'\r\n  import styles from './CountryPicker.module.css'\r\n\r\n  const CountryPicker = ({handleChange}) => {\r\n\r\n    const[fetchedCountries, setFetchedCountries] = useState([])\r\n\r\n    useEffect(() => {\r\n      const FetchAPI = async () => {\r\n        setFetchedCountries(await FetchCountries())\r\n      }\r\n\r\n      FetchAPI()\r\n    }, [setFetchedCountries])\r\n\r\n    return ( \r\n      <FormControl className = {styles.formControl}>\r\n        <NativeSelect default = '' onChange = {(e) => handleChange(e.target.value)} >\r\n          <option value = ''>Global</option>\r\n          {fetchedCountries.map((country, i) => (\r\n            <option key = {i} value = {country}>{country}</option>\r\n          ))}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    );\r\n  }\r\n  \r\n  export default CountryPicker","import React, {Component} from 'react'\r\nimport styles from './App.module.css'\r\nimport {Cards, Chart, CountryPicker} from './components/'\r\nimport { FetchData } from './api'\r\nimport CoronaImage from './images/image.png'\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: ' '\r\n  }\r\n\r\n  async componentDidMount(){\r\n    const data = await FetchData()\r\n    console.log(data);\r\n    this.setState({\r\n      data: data\r\n    })\r\n  }\r\n\r\n  handleChange  = async (country) => {\r\n    //fetch the data\r\n    const data = await FetchData(country)\r\n    this.setState({\r\n      data: data,\r\n      country: country\r\n    })\r\n    //set the state\r\n    console.log(country)\r\n  }\r\n\r\n\r\n  render() { \r\n    const {data} =  this.state\r\n    return ( \r\n      <div className = {styles.container}>\r\n        <Cards data = {data} />\r\n        <CountryPicker handleChange = {this.handleChange} />\r\n        <Chart data = {this.state.data} country = {this.state.country} />\r\n      </div>\r\n     );\r\n  }\r\n}\r\n \r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render( <App/>, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__12-Ob\",\"image\":\"App_image__1cH2n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__27UYS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__mb-TE\"};"],"sourceRoot":""}